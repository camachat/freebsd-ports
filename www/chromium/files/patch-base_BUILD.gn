<<<<<<< HEAD
--- base/BUILD.gn.orig	2021-01-18 21:28:44 UTC
+++ base/BUILD.gn
@@ -873,7 +873,7 @@ component("base") {
=======
--- base/BUILD.gn.orig	2021-03-12 23:57:15 UTC
+++ base/BUILD.gn
@@ -885,7 +885,7 @@ component("base") {
>>>>>>> upstream/main
       "timer/hi_res_timer_manager_posix.cc",
     ]
 
-    if (!is_nacl && !is_apple) {
+    if (!is_nacl && !is_apple && !is_bsd) {
       sources += [
         "cpu_affinity_posix.cc",
         "cpu_affinity_posix.h",
<<<<<<< HEAD
@@ -884,6 +884,11 @@ component("base") {
=======
@@ -896,6 +896,11 @@ component("base") {
>>>>>>> upstream/main
         "profiler/thread_delegate_posix.h",
       ]
     }
+    if (is_bsd) {
+      sources += [
+        "profiler/stack_sampler_posix.cc",
+      ]
+    }
   }
 
   if (is_win) {
<<<<<<< HEAD
@@ -1293,7 +1298,7 @@ component("base") {
=======
@@ -1301,7 +1306,7 @@ component("base") {
>>>>>>> upstream/main
   # building inside the cros_sdk environment - use host_toolchain as a
   # more robust check for this.
   if (!use_sysroot &&
-      (is_android || ((is_linux || is_chromeos) && !is_chromecast)) &&
+      (is_android || ((is_linux || is_chromeos) && !is_chromecast) && !is_clang) &&
       host_toolchain != "//build/toolchain/cros:host") {
     libs += [ "atomic" ]
   }
<<<<<<< HEAD
@@ -1343,7 +1348,7 @@ component("base") {
=======
@@ -1351,7 +1356,7 @@ component("base") {
>>>>>>> upstream/main
           "allocator/allocator_shim_default_dispatch_to_mac_zoned_malloc.cc",
         ]
       }
-      if (is_chromeos || is_linux) {
+      if ((is_chromeos || is_linux) && !is_bsd) {
         sources += [ "allocator/allocator_shim_default_dispatch_to_glibc.cc" ]
       }
       if (is_win) {
<<<<<<< HEAD
@@ -1969,6 +1974,34 @@ component("base") {
=======
@@ -1978,6 +1983,34 @@ component("base") {
>>>>>>> upstream/main
     }
   }
 
+  if (is_bsd) {
+    sources -= [
+      "files/file_path_watcher_linux.cc",
+      "files/file_util_linux.cc",
+      "process/memory_linux.cc",
+      "process/process_handle_linux.cc",
+      "process/process_iterator_linux.cc",
+      "process/process_metrics_linux.cc",
+      "system/sys_info_linux.cc"
+    ]
+    sources += [
<<<<<<< HEAD
+      "files/file_path_watcher_kqueue.cc",
+      "files/file_path_watcher_kqueue.h",
+      "files/file_path_watcher_stub.cc",
=======
+      "files/file_path_watcher_freebsd.cc",
+      "files/file_path_watcher_kqueue.cc",
+      "files/file_path_watcher_kqueue.h",
>>>>>>> upstream/main
+      "process/memory_stubs.cc",
+      "process/process_handle_freebsd.cc",
+      "process/process_iterator_freebsd.cc",
+      "process/process_metrics_freebsd.cc",
+      "system/sys_info_freebsd.cc",
+    ]
+    libs = [
+      "execinfo", # logging.cc
+      "kvm",      # process_metrics_freebsd
+      "util"      # process_metrics_freebsd
+    ]
+  }
+
+
   # iOS
   if (is_ios) {
     sources -= [
<<<<<<< HEAD
@@ -3111,7 +3144,7 @@ test("base_unittests") {
     }
   }
 
-  if (is_linux || is_chromeos) {
+  if ((is_linux || is_chromeos) && !is_bsd) {
     sources += [ "debug/proc_maps_linux_unittest.cc" ]
   }
 
@@ -3152,7 +3185,7 @@ test("base_unittests") {
       "posix/unix_domain_socket_unittest.cc",
       "task/thread_pool/task_tracker_posix_unittest.cc",
     ]
-    if (!is_nacl && !is_apple) {
+    if (!is_nacl && !is_apple && !is_bsd) {
       sources += [
         "cpu_affinity_posix_unittest.cc",
         "profiler/stack_copier_signal_unittest.cc",
=======
@@ -3130,7 +3163,7 @@ if (build_base_unittests) {
       }
     }
 
-    if (is_linux || is_chromeos) {
+    if ((is_linux || is_chromeos) && !is_bsd) {
       sources += [ "debug/proc_maps_linux_unittest.cc" ]
     }
 
@@ -3171,7 +3204,7 @@ if (build_base_unittests) {
         "posix/unix_domain_socket_unittest.cc",
         "task/thread_pool/task_tracker_posix_unittest.cc",
       ]
-      if (!is_nacl && !is_apple) {
+      if (!is_nacl && !is_apple && !is_bsd) {
         sources += [
           "cpu_affinity_posix_unittest.cc",
           "profiler/stack_copier_signal_unittest.cc",
>>>>>>> upstream/main
